@page "/editcategory/{categoryId:int}"
@using Duwademy.Components.Services
@using Duwademy.Components.Models
@inject CategoryService CategoryService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h3>Edit Category</h3>

@if (category == null)
{
    <p>Loading category...</p>
}
else
{
    <div class="container mt-4">
        <form>
            <div class="form-group">
                <label for="name">Name</label>
                <input type="text" id="name" @bind="category.Name" class="form-control" placeholder="Enter category name" />
            </div>

            <div class="form-group mt-3">
                <label for="description">Description</label>
                <input type="text" id="description" @bind="category.Description" class="form-control" placeholder="Enter category description" />
            </div>

            <div class="mt-4">
                <button type="button" class="btn btn-primary" @onclick="UpdateCategory">Save</button>
                <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
            </div>
        </form>
    </div>
}

@code {
    [Parameter]
    public int categoryId { get; set; }

    private Category category;

    protected override async Task OnInitializedAsync()
    {
        // Load the existing category details for editing
        category = await CategoryService.GetCategoryByIdAsync(categoryId);
    }

    private async Task UpdateCategory()
    {
        // Implement the logic to update the category
        var success = await CategoryService.UpdateCategoryAsync(categoryId, category);
        if (success)
        {
            NavigationManager.NavigateTo("/categories"); // Navigate back to the categories page after successful update
        }
        else
        {
            Console.WriteLine("Failed to update category.");
        }
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/categories");
    }
}
