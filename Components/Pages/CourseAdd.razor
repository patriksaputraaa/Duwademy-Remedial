@page "/addcourse"
@using Duwademy.Components.Services
@using Duwademy.Components.Models
@inject CourseService CourseService
@inject CategoryService CategoryService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h3>Add New Course</h3>

<div class="container mt-4">
    <EditForm Model="newCourse" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="name">Course Name</label>
            <InputText id="name" @bind-Value="newCourse.Name" class="form-control" placeholder="Enter course name" />
        </div>

        <div class="form-group mt-3">
            <label for="image">Upload Image</label>
            <InputFile OnChange="HandleFileSelected" class="form-control" />
        </div>

        <div class="form-group mt-3">
            <label for="duration">Duration (hours)</label>
            <InputNumber id="duration" @bind-Value="newCourse.Duration" class="form-control" placeholder="Enter course duration" />
        </div>

        <div class="form-group mt-3">
            <label for="category">Category</label>
            <InputSelect id="category" @bind-Value="newCourse.CategoryId" class="form-control">
                <option value="">Select a category</option>
                @if (categories != null)
                {
                    @foreach (var category in categories)
                    {
                        <option value="@category.CategoryId">@category.Name</option>
                    }
                }
            </InputSelect>
        </div>

        <div class="form-group mt-3">
            <label for="description">Description</label>
            <InputTextArea id="description" @bind-Value="newCourse.Description" class="form-control" placeholder="Enter course description" />
        </div>

        <div class="mt-4">
            <button type="submit" class="btn btn-primary">Add Course</button>
            <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
        </div>
    </EditForm>
</div>

@code {
    private Course newCourse = new Course();
    private List<Category> categories = new List<Category>();
    private IBrowserFile selectedImage;

    protected override async Task OnInitializedAsync()
    {
        categories = await CategoryService.GetCategoriesAsync();
    }

    private void HandleFileSelected(InputFileChangeEventArgs e)
    {
        selectedImage = e.File;  // Store the selected file
    }

    private async Task HandleValidSubmit()
    {
        if (selectedImage != null)
        {
            // Generate unique file name and set it to ImageName
            var fileName = $"{Guid.NewGuid()}_{selectedImage.Name}";
            newCourse.ImageName = fileName;

            // Save the image on the server (in wwwroot/images)
            var filePath = Path.Combine("wwwroot", "images", fileName);
            using var stream = new FileStream(filePath, FileMode.Create);
            await selectedImage.OpenReadStream().CopyToAsync(stream);
        }

        var success = await CourseService.AddCourseAsync(newCourse);
        if (success)
        {
            Console.WriteLine("Course added successfully. Redirecting...");
            NavigationManager.NavigateTo("/courses");
        }
        else
        {
            Console.WriteLine("Failed to add course.");
        }
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/courses");
    }
}
